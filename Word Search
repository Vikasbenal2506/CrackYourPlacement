class Solution {
    public boolean exist(char[][] board, String word) {
        int n = board.length, m = board[0].length;
        for(int i=0; i<n; i++) {
            for(int j=0; j<m; j++) {
                if(board[i][j] == word.charAt(0) && search(board, i, j, 0, word)) {
                    return true;
                }
            }
        }
        return false;
    }

    public boolean search(char[][] board, int i, int j, int count, String word) {
        if(count == word.length()) {
            return true;
        }
        if(i == -1 || i == board.length || j == -1 || j == board[0].length || board[i][j] != word.charAt(count)) {
            return false;
        }

        char temp = board[i][j];
        board[i][j] = '*';

        boolean found = search(board, i+1, j, count+1, word) ||
                        search(board, i-1, j, count+1, word) ||
                        search(board, i, j+1, count+1, word) ||
                        search(board, i, j-1, count+1, word);
        board[i][j] = temp;
        return found;
    }
}
