class Solution {
    public String decodeString(String s) {
        Stack<Integer> si = new Stack<>();
        Stack<Character> ss = new Stack<>();
        String result = "", temp = "";

        for(int i=0; i<s.length(); i++) {
            int count = 0;
            if(Character.isDigit(s.charAt(i))) {

                while(Character.isDigit(s.charAt(i))) {
                    count = count * 10 + s.charAt(i) - '0';
                    i++;
                }
                i--;
                si.push(count);
            }

            else if(s.charAt(i) == '[') {
                if(Character.isDigit(s.charAt(i-1))) {
                    ss.push(s.charAt(i));
                }
                else {
                    ss.push(s.charAt(i));
                    si.push(1);
                }
            }

            else if(s.charAt(i) == ']') {
                temp = "";
                count = 0;
                
                if(!si.isEmpty()) {
                    count = si.peek();
                    si.pop();
                }

                while(!ss.isEmpty() && ss.peek() != '[') {
                    temp = ss.peek() + temp;
                    ss.pop();
                }

                if(!ss.isEmpty() && ss.peek() == '[') {
                    ss.pop();
                }

                for(int j=0; j<count; j++) {
                    result = result + temp;
                }

                for(int j=0; j<result.length(); j++) {
                    ss.push(result.charAt(j));
                }

                result = "";
            }

            else {
                ss.push(s.charAt(i));
            }
        }

        while(!ss.isEmpty()) {
            result = ss.peek() + result;
            ss.pop();
        }

        return result;
    }
}
